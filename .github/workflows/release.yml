name: Publish Release

on:
  push:
    tags:
      - "v*"

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-node@v2-beta
        with:
          node-version: "14"

      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Create ~/.clasprc.json
        run: |
          echo $(cat <<-EOS
          {
            "token": {
              "access_token": "${{ secrets.CLASPRC_ACCESS_TOKEN }}",
              "scope": "https://www.googleapis.com/auth/script.deployments https://www.googleapis.com/auth/userinfo.profile https://www.googleapis.com/auth/drive.file openid https://www.googleapis.com/auth/service.management https://www.googleapis.com/auth/script.projects https://www.googleapis.com/auth/userinfo.email https://www.googleapis.com/auth/drive.metadata.readonly https://www.googleapis.com/auth/logging.read https://www.googleapis.com/auth/cloud-platform https://www.googleapis.com/auth/script.webapp.deploy",
              "token_type": "Bearer",
              "id_token": "${{ secrets.CLASPRC_ID_TOKEN }}",
              "expiry_date": ${{ secrets.CLASPRC_EXPIRY_DATE }},
              "refresh_token": "${{ secrets.CLASPRC_REFRESH_TOKEN }}"
            },
            "oauth2ClientSettings": {
              "clientId": "${{ secrets.CLASPRC_CLIENT_ID }}",
              "clientSecret": "${{ secrets.CLASPRC_CLIENT_SECRET }}",
              "redirectUri": "http://localhost"
            },
            "isLocalCreds": false
          }
          EOS
          ) > ~/.clasprc.json

      - name: Create .clasp.json
        run: |
          echo "{\"scriptId\": \"${{ secrets.CLASP_SCRIPT_ID }}\"}" > .clasp.json

      - name: Get version
        id: get_version
        run: echo ::set-output name=VERSION::${GITHUB_REF#refs/tags/}

      - name: Upload files
        run: npx @google/clasp push --force

      - name: Add version
        run: npx @google/clasp version ${{ steps.get_version.outputs.VERSION }}
